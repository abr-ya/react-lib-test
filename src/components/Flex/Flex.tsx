import { FC } from "react";

import { StyledFlex } from "./Flex.styles";

type StyledType = string | number | string[] | number[];
export interface IFlexProps {
  alignContent?: StyledType;
  alignItems?: StyledType;
  alignSelf?: StyledType;
  bg?: StyledType;
  border?: StyledType;
  borderBottom?: StyledType;
  borderColor?: string;
  borderLeft?: StyledType;
  borderRadius?: StyledType;
  borderRight?: StyledType;
  borderTop?: StyledType;
  pr?: StyledType;
  pb?: StyledType;
  pl?: StyledType;
  px?: StyledType;
  py?: StyledType;
  fontSize?: StyledType;
  fontFamily?: StyledType;
  fontWeight?: StyledType;
  gap?: StyledType;
  lineHeight?: StyledType;
  letterSpacing?: StyledType;
  textAlign?: StyledType;
  fontStyle?: StyledType;
  width?: StyledType;
  minWidth?: StyledType;
  maxWidth?: StyledType;
  height?: StyledType;
  minHeight?: StyledType;
  maxHeight?: StyledType;
  display?: StyledType;
  size?: StyledType;
  verticalAlign?: StyledType;
  overflow?: StyledType;
  mt?: StyledType;
  color?: string;
  justifyItems?: StyledType;
  justifyContent?: StyledType;
  flexWrap?: StyledType;
  flexDirection?: StyledType;
  flex?: StyledType;
  flexGrow?: StyledType;
  flexShrink?: StyledType;
  flexBasis?: StyledType;
  justifySelf?: StyledType;
  m?: StyledType;
  order?: StyledType;
  children?: React.ReactNode | string;
  mr?: StyledType;
  mb?: StyledType;
  pt?: StyledType;
  p?: StyledType;
  mx?: StyledType;
  my?: StyledType;
  ml?: StyledType;
  boxShadow?: StyledType;
  onClick?: React.MouseEventHandler<HTMLDivElement>;
  style?: React.CSSProperties;
  cursor?: StyledType;
  position?: string;
}

export const Flex: FC<IFlexProps> = (props) => <StyledFlex {...props} />;
